- hosts: all
  # user: root
  become: yes
  become_method: su
  become_user: root

  vars:
    - create_user: k8s

  tasks:

    # PREREQS
    
    - name: Upgrade all packages to the latest version
      apt: update_cache=yes upgrade=dist

    - name: Update APT package cache
      action: apt update_cache=yes

    - name: Install list of packages
      apt: name={{item}} state=installed
      with_items:
           - sudo
           - curl
           - vim
           - make
           - apt-transport-https
           - ca-certificates 
           - gnupg2
           - software-properties-common
           - nfs-common

    # DOCKER

    - name: Add Docker signing key, will not download if present
      apt_key:
        id: 0EBFCD88
        url: https://download.docker.com/linux/debian/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/debian stretch edge
        state: present

    - name: Install Docker
      apt:
        name: docker-ce
        state: present
        update_cache: yes

    - name: Make sure Docker group exists
      group: 
        name=docker
        state=present

    # KUBERNETES
    #
    - name: Create a new user
      user: 
        name="{{ create_user }}"
        state=present
        groups="sudo,docker"
        shell=/bin/bash
   
    # Don't know why it was giving me errors adding it manually, 
    # TODO convert to how docker does it similarly above (add through ansible not shell)
    - name: Add Kubernetes signing key
      shell: curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
    
    - name: Add Kubernetes repository
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        state: present
    
    - name: Install Kubernetes packages
      apt: name={{item}} state=installed update_cache=yes
      with_items:
           - kubectl
           - kubeadm
           - kubelet

    # Disable swap (required for kubeadm)
    - name: Remove swapfile
      mount:
        name: swap
        fstype: swap
        state: absent

    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: Remove swap entry from /etc/fstab
      shell: sed -i '/swap/d' /etc/fstab

    # Add the user to wheel for passwordless sudo
    # make sure that root ssh is disabled as well
    - include: ../tasks/ssh-and-wheel.yaml

  handlers:
    - name: restart networking
      service: name=networking state=restarted
    - name: restart ssh
      service: name=sshd state=restarted
